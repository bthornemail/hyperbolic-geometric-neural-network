{
  "inputs": [
    {
      "id": "memory_file_path",
      "type": "promptString",
      "description": "Path to the memory storage file",
      "default": "./data/memory.json",
      "password": false
    },
    {
      "id": "redis_url",
      "type": "promptString",
      "description": "Redis connection URL",
      "default": "redis://127.0.0.1:6379",
      "password": false
    }
  ],
  "mcpServers": {
    "codacy": {
      "command": "npx",
      "args": [
        "-y",
        "@codacy/codacy-mcp@latest"
      ]
    },
    "enhanced-h2gnn": {
      "command": "tsx",
      "args": [
        "/home/main/devops/hyperbolic-geometric-neural-network/src/mcp/enhanced-h2gnn-mcp-server.ts"
      ],
      "env": {
        "NODE_ENV": "production"
      }
    },
    "geometric-tools-mcp-server": {
      "command": "tsx",
      "args": [
        "/home/main/devops/hyperbolic-geometric-neural-network/src/mcp/geometric-tools-mcp-server.ts"
      ],
      "env": {
        "NODE_ENV": "production"
      }
    },
    "h2gnn": {
      "command": "tsx",
      "args": [
        "/home/main/devops/hyperbolic-geometric-neural-network/src/mcp/h2gnn-mcp-server.ts"
      ],
      "env": {
        "NODE_ENV": "production"
      }
    },
    "knowledge-graph": {
      "command": "tsx",
      "args": [
        "/home/main/devops/hyperbolic-geometric-neural-network/src/mcp/knowledge-graph-mcp-server.ts"
      ],
      "env": {
        "NODE_ENV": "production"
      }
    },
    "lsp-ast": {
      "command": "tsx",
      "args": [
        "/home/main/devops/hyperbolic-geometric-neural-network/src/mcp/lsp-ast-mcp-server.ts"
      ],
      "env": {
        "NODE_ENV": "production"
      }
    },
    "memory": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory@latest"
      ]
    },
    "sequentialthinking": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sequential-thinking@latest"
      ]
    },
    "redis": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-redis"
      ],
      "env": {
        "REDIS_URL": "redis://127.0.0.1:6379"
      }
    },
    "claude": {
      "command": "claude",
      "args": [
        "mcp",
        "serve"
      ],
      "env": {}
    },
    "ollama": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "ollama-mcp-server@latest"
      ],
      "env": {
        "OLLAMA_BASE_URL": "http://localhost:11434"
      }
    },
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/home/main/devops/hyperbolic-geometric-neural-network"
      ]
    },
    "screenshot-full-page-mcp": {
      "command": "node",
      "args": [
        "/home/main/github/ScreenshotMCP/index.js"
      ]
    },
    "chrome-devtools": {
      "command": "npx",
      "args": [
        "chrome-devtools-mcp@latest"
      ]
    },
    "obsidian-mcp": {
      "type": "stdio",
      "command": "node",
      "args": ["/home/main/devops/universal-life-protocol/packages/universal-life-vault/dist/obsidian-mcp.js"]
    },
    "identity-mcp": {
      "type": "stdio",
      "command": "node",
      "args": ["/home/main/devops/universal-life-protocol/packages/universal-life-vault/dist/identity-mcp.js"]
    }
  },
  "tools": [
    {
      "name": "initialize_wordnet",
      "description": "Initialize WordNet processor with hyperbolic embeddings",
      "server": "h2gnn"
    },
    {
      "name": "query_wordnet",
      "description": "Query WordNet for concept information and relationships",
      "server": "h2gnn"
    },
    {
      "name": "compute_hyperbolic_distance",
      "description": "Compute hyperbolic distance between two concepts",
      "server": "h2gnn"
    },
    {
      "name": "run_hierarchical_qa",
      "description": "Run hierarchical Q&A workflow using H²GNN",
      "server": "h2gnn"
    },
    {
      "name": "explore_semantic_space",
      "description": "Explore semantic relationships in hyperbolic space",
      "server": "h2gnn"
    },
    {
      "name": "train_concept_embeddings",
      "description": "Train hyperbolic embeddings for new concepts",
      "server": "h2gnn"
    },
    {
      "name": "analyze_hierarchy",
      "description": "Analyze hierarchical structure using hyperbolic geometry",
      "server": "h2gnn"
    }
  ],
  "resources": [
    {
      "uri": "h2gnn://wordnet/synsets",
      "name": "WordNet Synsets",
      "description": "All loaded WordNet synsets with embeddings",
      "server": "h2gnn"
    },
    {
      "uri": "h2gnn://wordnet/hierarchy",
      "name": "WordNet Hierarchy",
      "description": "Hierarchical structure of WordNet concepts",
      "server": "h2gnn"
    },
    {
      "uri": "h2gnn://embeddings/all",
      "name": "Hyperbolic Embeddings",
      "description": "All hyperbolic embeddings in the system",
      "server": "h2gnn"
    },
    {
      "uri": "h2gnn://workflows/active",
      "name": "Active Workflows",
      "description": "Currently running PocketFlow workflows",
      "server": "h2gnn"
    },
    {
      "uri": "h2gnn://system/status",
      "name": "System Status",
      "description": "Current status of H²GNN system components",
      "server": "h2gnn"
    }
  ],
  "prompts": [
    {
      "name": "concept_analysis",
      "description": "Analyze a concept using hyperbolic geometry and WordNet",
      "server": "h2gnn"
    },
    {
      "name": "hierarchical_reasoning",
      "description": "Perform hierarchical reasoning about concept relationships",
      "server": "h2gnn"
    },
    {
      "name": "semantic_exploration",
      "description": "Guide semantic exploration in hyperbolic space",
      "server": "h2gnn"
    }
  ]
}